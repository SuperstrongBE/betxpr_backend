version: '3.8'

services:
  redis:
    image: redis:alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes

  data-processor:
    build:
      context: .
      dockerfile: ./apps/data-processor/Dockerfile
    env_file:
      - ./apps/data-processor/.env
    depends_on:
      - redis
    ports:
      - "3002:3002"

  eth-listener:
    build:
      context: .
      dockerfile: ./apps/eth-listener/Dockerfile
    env_file:
      - ./apps/eth-listener/.env
    depends_on:
      - data-processor
    ports:
      - "3001:3001"

  xpr-listener:
    build:
      context: .
      dockerfile: ./apps/xpr-listener/Dockerfile
    env_file:
      - ./apps/xpr-listener/.env
    depends_on:
      - data-processor
    ports:
      - "3003:3003"

  prometheus:
    image: prom/prometheus:latest
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      - '--web.console.templates=/usr/share/prometheus/consoles'

  grafana:
    image: grafana/grafana:latest
    ports:
      - "3000:3000"
    volumes:
      - grafana_data:/var/lib/grafana
      - ./grafana/provisioning:/etc/grafana/provisioning
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_USERS_ALLOW_SIGN_UP=false
    depends_on:
      - prometheus

volumes:
  redis_data:
  prometheus_data:
  grafana_data: